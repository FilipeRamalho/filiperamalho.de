name: Release Image
on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # 1) Build each architecture on its native runner
  build:
    strategy:
      matrix:
        include:
          - runner: ubuntu-24.04   # amd64 runner
            platform: linux/amd64
            archSuffix: amd64
          - runner: ubuntu-24.04-arm  # arm64 runner
            platform: linux/arm64
            archSuffix: arm64
    runs-on: ${{ matrix.runner }}

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Create multiple tags based on semver and branch
            type=semver,pattern={{version}}
            type=semver,pattern=v{{major}}
            type=ref,event=branch

      - name: Build and push arch-specific image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: true

          # Append "-amd64" or "-arm64" to each tag so we can merge them later
          tags: |
            ${{ steps.meta.outputs.tags }}-${{ matrix.archSuffix }}
            # Also push the raw tags (e.g., v3, latest) for the current arch.
            # This is redundant but ensures compatibility.
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # 2) Merge the two arch-specific images into a single multi-arch manifest
  merge-manifests:
    name: Merge Manifests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Repeat the same strategy so we get identical tags
            type=semver,pattern={{version}}
            type=semver,pattern=v{{major}}
            type=ref,event=branch

      - name: Merge both architectures into multi-arch tags
        run: |
          # Split comma-separated tags into an array
          IFS=',' read -ra ALL_TAGS <<< "${{ steps.meta.outputs.tags }}"
          for TAG in "${ALL_TAGS[@]}"; do
            TRIMMED_TAG=$(echo "$TAG" | xargs)
            echo "Merging multi-arch for tag: $TRIMMED_TAG"
            docker buildx imagetools create \
              --tag "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$TRIMMED_TAG" \
              "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$TRIMMED_TAG-amd64" \
              "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$TRIMMED_TAG-arm64"
          done