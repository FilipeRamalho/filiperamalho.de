---
import {type CompileDocArgs, NodeCompiler} from "@myriaddreamin/typst-ts-node-compiler";

import Main from "../layouts/Main.astro";
import Navbar from "../components/Navbar.astro";
import {load} from "cheerio";
import Button from "../components/Button.astro";

const code1 = `
#import "@preview/cv-soft-and-hard:0.1.0": styling, section, entry, subsection, rust, cpp, python, typst-logo, java, typescript
#show: styling
#set page(fill: white, margin:1cm`

const code2 = `)
 #align(center)[
  = Filipe Ramalho - Curriculum Vitae\\
  Berlinerstr. 29, 55131 Mainz\\
  #link("https://filiperamalho.de", "filiperamalho.de") |
  #link("mailto:privat@filiperamalho.de", "privat@filiperamalho.de") |
  #link("tel:+4917622095047", "+49 176 22095047") \\
  #link("https://www.github.com/FilipeRamalho", "github.com/FilipeRamalho") |
  #link("https://www.linkedin.com/in/fmdsr/", "linkedin.com/in/fmdsr/") 
] 

#section("Profil")

*Physiker und ML-Entwickler* _mit Schwerpunkt auf numerischen Methoden und neuronalen Netzen für wissenschaftliche Anwendungen._
- *Forschung*: Implementierung eines neuronalen Netzes zur Lösung der Schrödinger-Gleichung mithilfe der Variationsmethode (Bachelor-Thesis).
- *Praxis*: Von der Datenpipeline bis zur Modelloptimierung, immer mit Fokus auf skalierbare, effiziente Lösungen.
- *Tech-Stack*: PyTorch, Docker, PowerShell, Mathematica, Kotlin, Web Dev.
- *Arbeitsweise*: Datengetrieben, kollaborativ (Erfahrung in interdisziplinären Teams), mit Leidenschaft für klare Dokumentation (Typst/LaTeX) und reproduzierbare Forschung.

//Experience
#section("Erfahrung")
#entry(
  [
    *Werkstudent* (_Berufsgenossenschaft Holz und Metall_)
    - Migration von 2.000+ Servern von MS SCOM zu PRTG.
    - Betrieb der Überwachung über WMI, SNMP von Server-Hardware und Applikationen.
    - Entwicklung von selbstgeschriebenen Sensoren für PRTG mit PowerShell.
    - Betreuung von Auszubildenden.
  ],
  [_seit 11/2023_]
)

#entry(
  [
    *Hilfswissenschaftler* (_ZDV Mainz_)
    - Alltägliche Hardwarewartungsarbeiten. 
    - Webseiten auf moderne Javascript Frameworks portiert.
    - Python-Skripte für den HPC-Betrieb entwickelt. 
    - Entwicklung und Koordination eines Asset Management Systems. 
  ],
  [_09/2021 - 10/2023_]
)

#entry(
  [
    *Praktikum* (_Institut für Kernphysik Mainz_)
    - Entwurf und Lötung von Schaltungen für Experimente. 
    - Weckte Interesse an Datenanalyse (Messdatenauswertung mit Python).
  ],
  [_06/2018_],
)

#block(breakable: false)[
#section("Bildung")
#entry(
  [
    *Johannes-Gutenberg-Universität Mainz*\\
    Bsc. Physics\\
    #text([Nebenfach: Informatik], size: 9pt) \\
    #text([Thesis: "_Neural network implementation of a variational method to determine solutions of the Schrödinger equation_" (Univ.-Prof. Dr. Marc Vanderhaeghen)], size: 9pt)
  ],
  [
    _04/2020-03/2026_
  ],
)
#entry(
  [*IGS Gerhard Ertl, Sprendlingen* \\
   Abitur \\ 
   #text([Schwerpunkt: MINT], size: 9pt)],
  
  [_09/2011-03/2020_]
)
]
#block(breakable: false)[
#section("Sprachen")

#text("Deutsch", weight: 600) (fließend), #text("Englisch", weight: 600) (fließend), #text("Portugiesich", weight: 600) (Muttersprache). 
]

#block(breakable: false)[
#section("Skills", note: "In absteigender Reihenfolge nach Kenntnisstand")
#table(
  align: left,
  columns: (auto, 1fr),
  stroke: none,
  row-gutter: 0pt,
  column-gutter: 5pt,
  inset: (left: 0pt, top: 2pt),
  text("ML/Data Science", weight: 600),
  [Python, Mathematica, Matplotlib, PyTorch, SQL, Torchquad, Numpy],
  text("Backend/DevOps", weight: 600),
  [Kotlin, PowerShell, Docker],
  text("Webentwicklung", weight: 600),
  [Typescript, Astro],
  text("Technische Skills", weight: 600),
  [Hardware-Diagnose (WMI), Löten, Schaltungsdesign],
)
]

#box(place(hide[
#block(breakable: false)[
#section("Selected Projects", note: "In descending order of project size")
#entry(
  [
    *#link("https://beispiel.com", \`beispiel_projekt\`)* -
    _Beispielprojekt_ #java #python #typescript\\
    - Punkt 1
    - Punkt 2
  ],
  [_08/2022_]
)
]

#block(breakable: false)[
#section("Further Commitment")
#entry(
  [
    *Fachschaft Physik/Meteorologie*\\
    - Vertretung der Studierenden in verschiedenen Gremien und Ausschüssen auf allen Ebenen, vom Fachbereich bis zur Bundesfachschaftstagung.
    - Organisation von Fachschaftsveranstaltungen mitgewirkt, wie das Mario-Kart-Turniers mit über 100 Teilnehmern
    - Pflege der Homepage 
    - Server und ein Wiki für die Fachschaft eingerichtet. 
    - Entwicklung einer Anwendung zur digitalen Verwaltung von Turnieren.
  ],
  [_2021/2025_],
)]]))`

let input: CompileDocArgs =
    {mainFileContent: code1+code2}
const $typst = NodeCompiler.create()
const pdfData = $typst.pdf(input)
const base64Data = btoa(String.fromCharCode(...new Uint8Array(pdfData)));
const dataUrl = `data:application/octet-stream;base64,${base64Data}`;


function getTypstSVG(code: string) {
    let input: CompileDocArgs =
        {mainFileContent: code}

    const $typst = NodeCompiler.create()
    const svg = $typst.svg(input)

    let loaded_svg = load(svg, {
        xml: true,
    });
    loaded_svg("svg").attr("width", "100%");
    loaded_svg("svg").attr("height", "100%");
    return loaded_svg.html();

}
---
<Main>
    <Navbar>
        <Button link={dataUrl} download="CV-FilipeRamalho.pdf" target="_blank" rel="noopener noreferrer">
            Download (A4 PDF)
        </Button>
    </Navbar>
    <div class="absolute left-0 w-screen m-auto md:hidden">
        <div class="w-full h-full" set:html={getTypstSVG(code1 + ",width: 10cm,height:48cm" + code2)}/>
    </div>
    <div class="w-full hidden md:inline lg:hidden">
        <div set:html={getTypstSVG(code1 + ",width: 15cm,height:35cm" + code2)}/>
    </div>
    <div class="w-full hidden lg:inline">
        <div class="w-full h-full" set:html={getTypstSVG(code1 + code2)}/>
    </div>
</Main>